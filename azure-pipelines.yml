# Node.js
# Build a general Node.js project with yarn.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
    vmImage: "macOS-latest"

variables:
    buildAndroid: true
    buildIOS: true

steps:
    - task: NodeTool@0
      inputs:
          versionSpec: "14.x"
      displayName: "Install Node.js"
    - script: |
          yarn install
      displayName: "React App > Install"
    - script: |
          yarn lint
      displayName: "React App > Lint"
    - script: |
          yarn test
      displayName: "React App > Test"
    - script: |
          yarn build
      displayName: "React App > Build"

    - script: |
          yarn cap-sync-android
      displayName: "React App > Sync to Android Project"
      condition: eq('${{ variables.buildAndroid }}', true)
    - script: |
          yarn cap-copy-android
      displayName: "React App > Copy to Android Project"
      condition: eq('${{ variables.buildAndroid }}', true)

    - task: Gradle@2
      inputs:
          workingDirectory: "android"
          gradleWrapperFile: "android/gradlew"
          gradleOptions: "-Xmx3072m"
          tasks: "build"
      displayName: "Android > Build"
      condition: eq('${{ variables.buildAndroid }}', true)
    - task: AndroidSigning@3
      inputs:
          apkFiles: "**/app-release-unsigned.apk"
          apksignerKeystoreFile: "upload-keystore.jks"
          apksignerKeystorePassword: "lead2gold"
          apksignerKeystoreAlias: "upload"
          apksignerKeyPassword: "gold2lead"
          zipalign: false
      displayName: "Android APK > Sign"
      condition: eq('${{ variables.buildAndroid }}', true)
    - task: CopyFiles@2
      inputs:
          contents: "**/app-release-unsigned.apk"
          flattenFolders: true
          targetFolder: "$(Build.ArtifactStagingDirectory)"
      displayName: "Android APK > Copy to Artifacts"
      condition: eq('${{ variables.buildAndroid }}', true)

    # - script: |
    #       yarn cap-sync-ios
    #   displayName: "React App > Sync to IOS Project"
    #   condition: eq('${{ variables.buildIOS }}', true)
    # - script: |
    #       yarn cap-copy-ios
    #   displayName: "React App > Copy to IOS Project"
    #   condition: eq('${{ variables.buildIOS }}', true)

    # - task: InstallAppleCertificate@2
    #   inputs:
    #       certSecureFile: "DistributionCertificates.p12"
    #       certPwd: lead2gold
    #   displayName: "Install Apple Certificate"
    #   condition: eq('${{ variables.buildIOS }}', true)
    # - task: InstallAppleProvisioningProfile@1
    #   inputs:
    #       provProfileSecureFile: "K53_Ninja_Profile.mobileprovision"
    #   displayName: "Install Apple Provisioning Profile"
    #   condition: eq('${{ variables.buildIOS }}', true)

    # - task: Xcode@5
    #   inputs:
    #       actions: "build archive"
    #       sdk: "iphoneos"
    #       scheme: "App"
    #       configuration: "Release"
    #       xcodeVersion: "default"
    #       xcWorkspacePath: "ios/App/App.xcworkspace"
    #       signingOption: "manual"
    #       signingIdentity: "$(APPLE_CERTIFICATE_SIGNING_IDENTITY)"
    #       provisioningProfileUuid: "$(APPLE_PROV_PROFILE_UUID)"
    #       packageApp: true
    #       useXcpretty: "false"
    #   displayName: "IOS > Build"
    #   condition: eq('${{ variables.buildIOS }}', true)
    # - task: CopyFiles@2
    #   inputs:
    #       contents: "**/*.ipa"
    #       flattenFolders: true
    #       targetFolder: "$(Build.ArtifactStagingDirectory)"
    #   displayName: "IOS IPA > Copy to Artifacts"
    #   condition: eq('${{ variables.buildIOS }}', true)

    - task: PublishBuildArtifacts@1
      inputs:
          PathtoPublish: "$(Build.ArtifactStagingDirectory)"
          ArtifactName: "drop"
          publishLocation: "Container"
      displayName: "Publish Artifacts"
